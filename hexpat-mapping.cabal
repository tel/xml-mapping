name:                hexpat-mapping
version:             0.0.11

synopsis:            Aeson for XML. Easy recursive mapping between Haskell and XML.
description:         
  Aeson for XML. Easy to use classes for serializing and deserializing
  Haskell types as XML trees. This library aims more to be user
  friendly and runtime compatible with XSD validation than type safe.
  .
  /Why not just use the various Pickle libraries?/
  .
  The @*.Pickle@ XML libraries are based around a bi-directional
  printer-parser type, often called @PU@. While this has the advantage
  of pairing printing and parsing and thus establishing something like
  a partial isomorphism (ed: or, as I prefer to think of it, a
  retract) these types are more complex to create and use due to their
  dual nature.
  .
  Instead, @hexpat-mapping@ follows the method popularized by the JSON
  parsing library @aeson@ and defines the parser and printers
  separately. This allows for @hexpat-mapping@ to have much nicer
  parsing technology.
  .
  In fact, as of today, there aren't even any printing/serialization
  capabilities built-in, though that will come in time.
  .
  /How does this related to XML Schema?/
  .
  @hexpat-mapping@ was written with code on one screen and XSD
  documentation on the other. That said, there's a long history of
  very complex object oriented semantics behind XML technologies. To
  the degree that those technologies are useful and translatable to
  user friendly Haskell, @hexpat-mapping@ endeavors to enable them,
  but it will likely never be a priority for @hexpat-mapping@ to have
  semantic parity with XSD. Instead, @hexpat-mapping@ aims to enable
  practical use of XML serialization as seen in the wild.

homepage:            http://github.com/tel/hexpat-mapping
license:             MIT
license-file:        LICENSE
author:              Joseph Abrahamson
maintainer:          me@jspha.com
copyright:           (c) 2013, Joseph Abrahamson
category:            Web
build-type:          Simple
cabal-version:       >=1.10

library
  hs-source-dirs:      src
  ghc-options:         -Wall
  default-language:    Haskell2010

  exposed-modules:     
    Text.XML.Mapping.NSMap
    Text.XML.Mapping.Types
    Text.XML.Mapping.Schema.Namespace
    Text.XML.Mapping.Schema.SimpleType
    Text.XML.Mapping.Internal.LevelSet
    Text.XML.Mapping.Internal.Parser
    Text.XML.Mapping.Internal.ParseError
  build-depends:       base >=4.6 && <4.7
                     , attoparsec
                     , base16-bytestring
                     , base64-bytestring
                     , bytestring
                     , errors
                     , free
                     , hashable
                     , hexpat
                     , lattices
                     , lens
                     , mtl
                     , semigroups
                     , text
                     , unordered-containers

test-suite tests
  type:                exitcode-stdio-1.0
  main-is:             Tests.hs
  hs-source-dirs:      src, tests
  ghc-options:         -Wall
  default-language:    Haskell2010

  other-modules:
    Test.Text.XML.Expat.Mapping
  build-depends:       base >=4.6 && <4.7
                     , hexpat-mapping

                     , QuickCheck
                     , bytestring
                     , errors
                     , hexpat
                     , tasty
                     , tasty-hunit
                     , tasty-quickcheck